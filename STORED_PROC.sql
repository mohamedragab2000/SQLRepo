-- example 1 create database called EMPLOYEE_INFO
CREATE DATABASE EMPLOYEE_INFO ;

-- create table 1 with emp_id and emp_name emp_age atrributes

CREATE TABLE EMP1 
(EMP_ID INT PRIMARY KEY,
EMP_NAME NVARCHAR(20),
EMP_AGE INT NOT NULL
);

-- insert data to table emp 1 to two ways 
-- -> one 
INSERT INTO EMP1 VALUES
(1 , 'MOHAEMD' ,20),
(2 , 'AHEMD' ,30),
(3 , 'EYAD' ,24);

-- -> two

INSERT INTO EMP1 
SELECT 1 , 'MOHAEMD' ,20 UNION ALL
SELECT 2 , 'AHEMD' ,30 UNION ALL
SELECT 3 , 'EYAD' ,24 

-- create table 2 with emp_id and emp_address atrributes

CREATE TABLE EMP2 
(EMP_ID INT PRIMARY KEY,
EMP_ADDRESS NVARCHAR(MAX)
);

-- insert data to table emp 2 to two ways

INSERT INTO EMP2 
SELECT 1 , 'MANZALA'  UNION ALL
SELECT 2 , 'MANSOURA'  UNION ALL
SELECT 3 , 'GIZA' 

SELECT * FROM EMP1
SELECT * FROM EMP2

-- TYPES OF PROCEDURE :
 -- 1- NON-PARAMETERIZED PROCEDURE
 -- 2- PARAMETERIZED PROCEDURE

-- how i can create procedure in sql

CREATE PROC USP_SELECT AS 
SELECT * FROM EMP1
SELECT * FROM EMP2

-- how i can operate / execute procedure in sql

EXEC USP_SELECT ;

-- using stored procedure for join 
CREATE PROC USP_JOIN_OP AS 
SELECT DISTINCT EMP1.EMP_ID,EMP_ADDRESS,EMP_AGE 
FROM EMP1,EMP2
WHERE EMP1.EMP_ID =EMP2.EMP_ID

EXEC USP_JOIN_OP ;

-- how to modify stored procedure 

ALTER PROC USP_JOIN_OP AS 
SELECT DISTINCT EMP_NAME,EMP_ADDRESS
FROM EMP1,EMP2
WHERE EMP1.EMP_ID =EMP2.EMP_ID

EXEC USP_JOIN_OP ;

-- using stored procedure to insert data

CREATE PROC USP_INSERT_DATA (
@ID INT,@NAME NVARCHAR(20),@AGE INT ,@ADDRESS NVARCHAR(MAX)
)AS 
INSERT INTO EMP1 
SELECT @ID ,@NAME,@AGE
INSERT INTO EMP2 
SELECT @ID  ,@ADDRESS;

EXEC USP_INSET_DATA 4,'NASSER',20,'CAIRO'

-- -- using stored procedure to update data

CREATE PROC USP_UPDATA_DATA(
@ID INT ,@AGE INT ,@ADDRESS NVARCHAR(MAX))AS
UPDATE EMP1 SET EMP_AGE =@AGE WHERE EMP_ID =@ID
UPDATE EMP2 SET EMP_ADDRESS =@ADDRESS WHERE EMP_ID =@ID

EXEC USP_UPDATA_DATA 2 ,28,QENA 

-- -- using stored procedure to delete data
CREATE PROC DELETE_DATA(
@ID INT )WITH ENCRYPTION AS 
DELETE FROM EMP1 WHERE EMP_ID =@ID
DELETE FROM EMP2 WHERE EMP_ID =@ID

EXEC DELETE_DATA 4;

-- STORED PROCEDURE WITH RETURN VALUE 

-- > RETURN 
CREATE PROC USP_GET_STAFF_COUNTR(@DEP VARCHAR(20))
AS BEGIN
RETURN (
SELECT  COUNT(ID) FROM instructor WHERE dept_name=@DEP)
END

DECLARE @PRE INT
EXEC @PRE = USP_GET_STAFF_COUNTR 'BIO'
SELECT @PRE

-- > OUTPUT PARAMETERS

CREATE PROC USP_GET_STAFF_COUNT(
@DEPT VARCHAR(20),
@STAFF_COUNT INT OUT ) --OUTPUT 
AS
SELECT @STAFF_COUNT=  COUNT(ID) FROM instructor WHERE dept_name=@DEPT

DECLARE @COUNT INT
EXEC USP_GET_STAFF_COUNT 'IT', @COUNT OUT
SELECT @COUNT

-- Stored procedure output parameters or return values

-- RETURN THE COUNT OF DOCTORS IN UNIVERSITY
CREATE PROC USP_COUNT_R
AS BEGIN
RETURN (SELECT COUNT(ID) FROM instructor)
END

DECLARE @COUNT_D INT 
EXEC @COUNT_D=USP_COUNT_R
PRINT(@COUNT_D)

exec USP_COUNT_R

-- OR 

CREATE PROC USP_COUNT_O
(@DOCTOR_NUM INT OUT )
AS 
SELECT COUNT(ID) FROM instructor

DECLARE @COUNT_DO INT 
EXEC USP_COUNT_O  @COUNT_DO 
PRINT(@COUNT_DO)



-- GETNAME and salary of doctor BY ID USING STORED PROCEDURE

CREATE PROC USPGETNAMEBYID(
@ID VARCHAR(8) , @NAME NVARCHAR(MAX) OUT
)AS
SELECT name , salary FROM instructor WHERE ID =@ID 


DECLARE @RESULT VARCHAR(20)
EXEC USPGETNAMEBYID '11000A',@RESULT OUT

CREATE PROC USPGETNAMEBYID_RET(
@ID VARCHAR(8) 
)AS
BEGIN
RETURN (SELECT name FROM instructor WHERE ID =@ID) 
END

EXEC USPGETNAMEBYID_RET '10000A'

-- TRY AND CATCH EXAMPLE

CREATE PROC USPDIV
AS BEGIN TRY
SELECT 1/0
END TRY
BEGIN CATCH
SELECT ERROR_NUMBER() AS ERRORNUM
END CATCH

EXEC USPDIV

CREATE PROC USPGETNAME(
@ID VARCHAR(8) 
)AS
BEGIN TRY
RETURN (SELECT name FROM instructor WHERE ID =@ID) 
END TRY
BEGIN CATCH
SELECT ERROR_MESSAGE() AS MESSAGE
END CATCH

EXEC USPGETNAME '10000A'






-- system procedure

SP_HELPTEXT 'USP_UPDATA_DATA';
SP_HELPTEXT 'DELETE_DATA';
SP_HELP 'USP_GET_STAFF_COUNT';
SP_HELP 'instructor'
SP_DEPENDS 'USP_GET_STAFF_COUNT';



create proc ups_staff (@deptt varchar(20) , @count_staff int out )
as
select @count_staff =COUNT(ID) from instructor where dept_name=@deptt


declare @count_staffed int 
exec ups_staff 'IT',@count_staffed out
select @count_staffed ;





create function getsalarysum()
returns int 
as
begin
declare @summ int 
select @summ =sum(salary) from instructor
return @summ
end

select dbo.getsalarysum()